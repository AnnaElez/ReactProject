[{"C:\\Users\\EDGAR\\Desktop\\Анна\\react\\bitproject\\src\\index.js":"1","C:\\Users\\EDGAR\\Desktop\\Анна\\react\\bitproject\\src\\reportWebVitals.js":"2","C:\\Users\\EDGAR\\Desktop\\Анна\\react\\bitproject\\src\\App.js":"3","C:\\Users\\EDGAR\\Desktop\\Анна\\react\\bitproject\\src\\ToDo.js":"4","C:\\Users\\EDGAR\\Desktop\\Анна\\react\\bitproject\\src\\CardTask.js":"5","C:\\Users\\EDGAR\\Desktop\\Анна\\react\\bitproject\\src\\addTask.js":"6","C:\\Users\\EDGAR\\Desktop\\Анна\\react\\bitproject\\src\\EditModal.js":"7","C:\\Users\\EDGAR\\Desktop\\Анна\\react\\bitproject\\src\\RemoveModal.js":"8","C:\\Users\\EDGAR\\Desktop\\Анна\\react\\bitproject\\src\\utils.js":"9","C:\\Users\\EDGAR\\Desktop\\Анна\\react\\bitproject\\src\\notFound.js":"10","C:\\Users\\EDGAR\\Desktop\\Анна\\react\\bitproject\\src\\About.js":"11","C:\\Users\\EDGAR\\Desktop\\Анна\\react\\bitproject\\src\\Contact.js":"12","C:\\Users\\EDGAR\\Desktop\\Анна\\react\\bitproject\\src\\Single.js":"13","C:\\Users\\EDGAR\\Desktop\\Анна\\react\\bitproject\\src\\NavMenu.js":"14"},{"size":626,"mtime":1613665753176,"results":"15","hashOfConfig":"16"},{"size":375,"mtime":1611244768607,"results":"17","hashOfConfig":"16"},{"size":838,"mtime":1613924072218,"results":"18","hashOfConfig":"16"},{"size":8006,"mtime":1613838118103,"results":"19","hashOfConfig":"16"},{"size":2194,"mtime":1613924214442,"results":"20","hashOfConfig":"16"},{"size":3717,"mtime":1613838562714,"results":"21","hashOfConfig":"16"},{"size":3335,"mtime":1613404974398,"results":"22","hashOfConfig":"16"},{"size":942,"mtime":1611244768605,"results":"23","hashOfConfig":"16"},{"size":54,"mtime":1613402612059,"results":"24","hashOfConfig":"16"},{"size":142,"mtime":1613666731874,"results":"25","hashOfConfig":"16"},{"size":136,"mtime":1613665828030,"results":"26","hashOfConfig":"16"},{"size":140,"mtime":1613665794445,"results":"27","hashOfConfig":"16"},{"size":138,"mtime":1613665810399,"results":"28","hashOfConfig":"16"},{"size":1126,"mtime":1613923812969,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"p2iglp",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"33"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\EDGAR\\Desktop\\Анна\\react\\bitproject\\src\\index.js",["64","65"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["66","67"],"C:\\Users\\EDGAR\\Desktop\\Анна\\react\\bitproject\\src\\reportWebVitals.js",[],"C:\\Users\\EDGAR\\Desktop\\Анна\\react\\bitproject\\src\\App.js",["68"],"C:\\Users\\EDGAR\\Desktop\\Анна\\react\\bitproject\\src\\ToDo.js",["69"],"import React, { PureComponent } from 'react';\r\nimport c from './Demo.module.css';\r\nimport { Button, Col, Row, Container } from 'react-bootstrap';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport Task from './CardTask.js';\r\nimport AddTask from './addTask.js';\r\nimport Confirm from './RemoveModal.js';\r\nimport PropTypes from 'prop-types';\r\nimport EditTaskModal from './EditModal.js';\r\n\r\nclass ToDo extends PureComponent {\r\n\r\n    state = {\r\n        editTask: null,\r\n        tasks: [],\r\n        arr: [1, 2, 3, 4, 5, 6, 7, 8, 9],\r\n        selectedTasks: new Set(),\r\n        toggle: false,\r\n        openNewTaskModal: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('http://localhost:3001/task', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n            .then(res => res.json())\r\n            .then((response) => {\r\n                if (response.error) {\r\n                    throw response.error\r\n                }\r\n\r\n                this.setState({\r\n                    tasks: response\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n\r\n\r\n    handleCheck = (taskId) => {\r\n        const selectedTasks = new Set(this.state.selectedTasks)\r\n\r\n        if (selectedTasks.has(taskId)) {\r\n            selectedTasks.delete(taskId)\r\n        }\r\n\r\n        else {\r\n            selectedTasks.add(taskId)\r\n        }\r\n\r\n        this.setState({\r\n            selectedTasks //ete key=value karelia mi angam ira anun@ grel\r\n        })\r\n    }\r\n\r\n\r\n    handleAdd = (data) => {\r\n\r\n        console.log(data)\r\n        const body =JSON.stringify(data)\r\n\r\n        fetch('http://localhost:3001/task', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body\r\n        })\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n                if (response.error) {\r\n                    throw response.error\r\n                }\r\n\r\n                const tasks = [response, ...this.state.tasks]\r\n\r\n                this.setState({\r\n                    tasks,\r\n                    openNewTaskModal:false\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n\r\n    }\r\n\r\n\r\n    handleDelete = (taskId) => {\r\n\r\n        fetch(`http://localhost:3001/task/${taskId}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n                if (response.error) {\r\n                    throw response.error\r\n                }\r\n\r\n                const newTasks = this.state.tasks.filter(task => task._id !== taskId);\r\n                this.setState({\r\n                    tasks: newTasks,\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n\r\n    }\r\n\r\n    removeSelected = (taskId) => {\r\n\r\n        const body = {\r\n            tasks: [...this.state.selectedTasks],\r\n        }\r\n\r\n        fetch(`http://localhost:3001/task`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(body)\r\n        })\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n                if (response.error) {\r\n                    throw response.error\r\n                }\r\n\r\n                let tasks = [...this.state.tasks]\r\n\r\n                this.state.selectedTasks.forEach((id) => {\r\n\r\n                    tasks = tasks.filter((task) => task._id !== id)\r\n                })\r\n                this.setState({\r\n                    tasks,\r\n                    selectedTasks: new Set(),\r\n                    toggle: false,\r\n                })\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n\r\n    }\r\n\r\n    toggleConfirm = () => {\r\n        this.setState({\r\n            toggle: !this.state.toggle\r\n        })\r\n\r\n    }\r\n\r\n    toggleEditModal = (task) => {\r\n        this.setState({\r\n            editTask: task\r\n        })\r\n\r\n    }\r\n\r\n    saveTask = (editedTask) => {\r\n\r\n        fetch(`http://localhost:3001/task/${editedTask._id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(editedTask)\r\n        })\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n                if (response.error) {\r\n                    throw response.error\r\n                }\r\n\r\n                const tasks = [...this.state.tasks]\r\n                const foundTaskIndex = tasks.findIndex((task) => task._id === editedTask._id)\r\n                tasks[foundTaskIndex] = response\r\n\r\n                this.setState({\r\n                    tasks,\r\n                    editTask: null,\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n\r\n    }\r\n\r\n    toggleopenNewTaskModal = () => {\r\n        this.setState({\r\n            openNewTaskModal: !this.state.openNewTaskModal\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const { handleAdd} = this.props\r\n        const { toggle, selectedTasks, editTask, openNewTaskModal } = this.state;\r\n        const tasksArray = this.state.tasks.map((task, i) => {\r\n\r\n            return (\r\n                <Col key={i} xs={12} sm={10} md={3} lg={5} xl={5} className='mb-3'>\r\n\r\n                    <Task\r\n                        onCheck={this.handleCheck}\r\n                        onRemove={this.handleDelete}\r\n                        data={task}\r\n                        disabled={!!selectedTasks.size}\r\n                        onEdit={this.toggleEditModal} />\r\n                </Col>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className={c.col}>\r\n                <Container>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col lg={3} mg={8} xl={2} sm={6}>\r\n                            <Button\r\n                                variant='outline-primary'\r\n                                onClick={this.toggleopenNewTaskModal}\r\n                                disabled={!!selectedTasks.size}>\r\n                                Add New Task\r\n                            </Button>\r\n\r\n                        </Col>\r\n\r\n                    </Row>\r\n\r\n                    <Row>{tasksArray}</Row>\r\n\r\n                    <Button variant=\"outline-danger\"\r\n                        onClick={this.toggleConfirm}\r\n                        disabled={selectedTasks.size === 0 ? true : false} >\r\n                        Remove selected\r\n\r\n                </Button >\r\n                </Container>\r\n                {toggle &&\r\n                    <Confirm\r\n                        onSubmit={this.removeSelected}\r\n                        onClose={this.toggleConfirm}\r\n                        count={selectedTasks.size} />\r\n                }\r\n\r\n                {\r\n                    !!editTask &&\r\n                    <EditTaskModal\r\n                        data={editTask}\r\n                        onSave={this.saveTask}\r\n                        onClose={() => this.toggleEditModal(null)} />\r\n                }\r\n                { openNewTaskModal &&\r\n                    <AddTask\r\n                        onAdd={this.handleAdd}\r\n                        disabled={selectedTasks.size}\r\n                        placeholder={this.props.placeholder} \r\n                        onClose = {this.toggleopenNewTaskModal}/>\r\n                }\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default ToDo;\r\n\r\nToDo.propTypes = {\r\n    data: PropTypes.object,\r\n    onRemove: PropTypes.func,\r\n    onCheck: PropTypes.func,\r\n    disabled: PropTypes.bool\r\n};\r\n\r\n","C:\\Users\\EDGAR\\Desktop\\Анна\\react\\bitproject\\src\\CardTask.js",[],"C:\\Users\\EDGAR\\Desktop\\Анна\\react\\bitproject\\src\\addTask.js",["70","71"],"import React, { Component, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport c from './Demo.module.css';\r\nimport { Button, Modal, FormControl } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {formatDate} from \"./utils.js\";\r\n\r\n\r\n\r\n\r\nclass AddTask extends Component {\r\n\r\n    state = {\r\n        toggle: false,\r\n        title: '',\r\n        description: '',\r\n        date:new Date()\r\n    }\r\n\r\n\r\n\r\n    handleAdd = () => {\r\n        const { title, description,date } = this.state;\r\n        if (!title) {\r\n            return\r\n        }\r\n        \r\n        const task = {\r\n            title,\r\n            description,\r\n            date:formatDate(date.toISOString())\r\n        }\r\n      this.props.onAdd(task)\r\n    }\r\n\r\n\r\n    handleChange = (event, type) => {\r\n        this.setState({\r\n            [type]: event.target.value\r\n        })\r\n    }\r\n\r\n\r\n    handleKeyDown = (event) => {\r\n\r\n        if (event.key === \"Enter\") {\r\n            this.handleAdd();\r\n        }\r\n\r\n    }\r\n\r\n    toggleAddModal = () => {\r\n        this.setState({\r\n            toggle: !this.state.toggle\r\n        })\r\n\r\n    }\r\n\r\n    handleDateChange=(date)=>{\r\n        this.setState({\r\n            date\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { title, date, handleAdd} = this.state\r\n        const { disabled, onClose} = this.props\r\n        // const Example = () => {\r\n        //     const [startDate, setStartDate] = useState(new Date());\r\n        // };\r\n\r\n        return (\r\n            <>\r\n                <Modal\r\n                    show={true}\r\n                    onHide={onClose}\r\n                    centered>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Add Task</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        <FormControl type=\"text\"\r\n                            placeholder={this.props.placeholder}\r\n                            onChange={(event) => this.handleChange(event, 'title')}\r\n                            aria-describedby=\"basic-addon1\"\r\n                            onKeyDown={(event) => this.handleKeyDown(event)}\r\n                            disabled={disabled}\r\n                        />\r\n                        <textarea\r\n                            className={c.description}\r\n                            onChange={(event) => this.handleChange(event, 'description')}\r\n                            rows='5' />\r\n\r\n                        <DatePicker\r\n                            selected={date}\r\n                            onChange={(date)=>this.handleDateChange(date)} />\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button\r\n                            variant=\"primary\"\r\n                            disabled={!title}\r\n                            onClick={this.handleAdd}>\r\n                            Add\r\n                        </Button>\r\n\r\n                        <Button\r\n                            variant=\"danger\"\r\n                            onClick={onClose}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n\r\n                </Modal>\r\n\r\n\r\n                {/* <Button\r\n                    variant=\"outline-secondary\"\r\n                    type=\"button\" value=\"Add\"\r\n                    onClick={this.toggleAddModal} >Add</Button> */}\r\n            </>\r\n\r\n        )\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nAddTask.propTypes = {\r\n    disabled: PropTypes.number,\r\n    onAdd: PropTypes.func,\r\n    onClose:PropTypes.func,\r\n};\r\n\r\nexport default AddTask;\r\n","C:\\Users\\EDGAR\\Desktop\\Анна\\react\\bitproject\\src\\EditModal.js",["72"],"import React, { Component,useState } from 'react';\r\nimport { Button, Modal, FormControl } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport './EditTask.css';\r\nimport DatePicker from \"react-datepicker\";\r\nimport {formatDate} from \"./utils.js\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\n\r\nexport default class EditTaskModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        const {date} = props.data\r\n\r\n        this.state = {\r\n            ...props.data,\r\n            date: date? new Date(date): new Date()\r\n            \r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const {name, value} = event.target\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleSave = () => {\r\n\r\n        const {title, date} = this.state;\r\n\r\n        if (!title) {\r\n            return;\r\n        }\r\n\r\n        this.props.onSave({...this.state, date:formatDate(date.toISOString())})\r\n\r\n    }\r\n\r\n\r\n    handleDateChange = (date) => {\r\n        this.setState({\r\n            date\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const { title, description, date } = this.state;\r\n        const { props } = this;\r\n        return (\r\n        <>\r\n                <Modal\r\n                    show={true}\r\n                    onHide={props.onClose}\r\n                    centered>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Edit Task</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        <FormControl \r\n                            name = 'title'\r\n                            value = {title}\r\n                            type=\"text\"\r\n                            placeholder={this.props.placeholder}\r\n                            onChange={this.handleChange}\r\n                            aria-describedby=\"basic-addon1\"\r\n                            // onKeyDown={(event) => this.handleKeyDown(event)}\r\n                            // disabled={disabled}\r\n                        />\r\n                        <textarea\r\n                            name = 'description'\r\n                            value = {description}\r\n                            className='description'\r\n                            onChange={this.handleChange}\r\n                            rows='5' />\r\n\r\n                        <DatePicker\r\n                            selected={date}\r\n                            onChange={this.handleDateChange} />\r\n                    </Modal.Body>\r\n\r\n                    <Modal.Footer>\r\n                        <Button\r\n                            variant=\"outline-secondary\"\r\n                            disabled={!title}\r\n                            onClick={this.handleSave}\r\n                            >\r\n                        Save\r\n                        </Button>\r\n\r\n                        <Button\r\n                            variant=\"secondary\"\r\n                            onClick={props.onClose}\r\n                            >\r\n                        Cancel\r\n                        </Button>\r\n                    </Modal.Footer>\r\n\r\n                </Modal>\r\n       </> );\r\n    }\r\n    \r\n}\r\n\r\nEditTaskModal.propTypes = {\r\n    data: PropTypes.object.isRequired,\r\n    onSave: PropTypes.func.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n\r\n};\r\n","C:\\Users\\EDGAR\\Desktop\\Анна\\react\\bitproject\\src\\RemoveModal.js",["73"],"import React, { Component } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nexport default function Confirm(props) {\r\n    return (\r\n            <Modal show={true} onHide={props.onClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Delete!</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Delete this {props.count} tasks if you're sure</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={props.onClose}>\r\n                        Close\r\n              </Button>\r\n                    <Button variant=\"danger\" onClick={props.onSubmit}>\r\n                        Delete\r\n              </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n    );\r\n}\r\n\r\nConfirm.propTypes = {\r\n    count:PropTypes.number,\r\n    onSubmit:PropTypes.func,\r\n    onClose:PropTypes.func,\r\n};\r\n","C:\\Users\\EDGAR\\Desktop\\Анна\\react\\bitproject\\src\\utils.js",[],"C:\\Users\\EDGAR\\Desktop\\Анна\\react\\bitproject\\src\\notFound.js",[],"C:\\Users\\EDGAR\\Desktop\\Анна\\react\\bitproject\\src\\About.js",[],"C:\\Users\\EDGAR\\Desktop\\Анна\\react\\bitproject\\src\\Contact.js",[],"C:\\Users\\EDGAR\\Desktop\\Анна\\react\\bitproject\\src\\Single.js",[],"C:\\Users\\EDGAR\\Desktop\\Анна\\react\\bitproject\\src\\NavMenu.js",[],{"ruleId":"74","severity":1,"message":"75","line":6,"column":25,"nodeType":"76","messageId":"77","endLine":6,"endColumn":30},{"ruleId":"74","severity":1,"message":"78","line":6,"column":32,"nodeType":"76","messageId":"77","endLine":6,"endColumn":36},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"74","severity":1,"message":"78","line":3,"column":34,"nodeType":"76","messageId":"77","endLine":3,"endColumn":38},{"ruleId":"74","severity":1,"message":"83","line":211,"column":17,"nodeType":"76","messageId":"77","endLine":211,"endColumn":26},{"ruleId":"74","severity":1,"message":"84","line":1,"column":28,"nodeType":"76","messageId":"77","endLine":1,"endColumn":36},{"ruleId":"74","severity":1,"message":"83","line":70,"column":30,"nodeType":"76","messageId":"77","endLine":70,"endColumn":39},{"ruleId":"74","severity":1,"message":"84","line":1,"column":27,"nodeType":"76","messageId":"77","endLine":1,"endColumn":35},{"ruleId":"74","severity":1,"message":"85","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":26},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-native-reassign",["86"],"no-negated-in-lhs",["87"],"'handleAdd' is assigned a value but never used.","'useState' is defined but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]